name: CI
on:
  push:
    branches:
      - main
      - 'release/**'
    tags:
      - v*
  pull_request:
    branches:
      - main
      - 'release/**'

jobs:
  #
  # golangci-lint
  #
  linters:
    name: Linters
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    strategy:
      matrix:
        go-version: [1.17]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v3
      - uses: golangci/golangci-lint-action@v3
        with:
          version: v1.46
          args: --timeout=5m
          skip-go-installation: true

  #
  # Project checks
  #
  project:
    name: Project Checks
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - uses: actions/checkout@v3
        with:
          path: src/github.com/uor-framework/client
      - name: verify go modules and vendor directory
        run: |
          make vendor
        working-directory: src/github.com/uor-framework/client
      - name: running unit tests
        run: |
          make test-unit
        working-directory: src/github.com/uor-framework/client
      - name: running sanity checks
        run: |
          make sanity
        working-directory: src/github.com/uor-framework/client

    # Release
  release:  
    needs: [linters, project]
    runs-on: ubuntu-latest
    timeout-minutes: 10

    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0
    - uses: actions/setup-go@v3
      with:
        go-version: 1.17
    - name: release with goreleaser
      id: goreleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          